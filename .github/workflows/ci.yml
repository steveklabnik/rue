name: CI

on:
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Test with Cargo (standard Rust toolchain)
  cargo-test:
    name: Cargo Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust ${{ matrix.rust }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      if: matrix.rust == 'stable'
      run: cargo fmt --all -- --check
    
    - name: Clippy
      if: matrix.rust == 'stable'
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose

  # Test with Buck2
  buck2-test:
    name: Buck2 Build & Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install Buck2
      uses: dtolnay/install-buck2@latest
    
    - name: Install Reindeer
      run: |
        cargo install --git https://github.com/facebookincubator/reindeer reindeer
    
    - name: Cache Buck2 dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          buck-out/
        key: ${{ runner.os }}-buck2-${{ hashFiles('**/Cargo.lock', 'BUCK', '**/*.BUCK') }}
    
    - name: Buck2 build
      run: buck2 build //crates/rue:rue
    
    - name: Buck2 test
      run: buck2 test //crates/...
    
    - name: Buck2 run
      run: buck2 run //crates/rue:rue samples/simple.rue

  # Integration tests
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [cargo-test, buck2-test]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
    
    - name: Build rue with Cargo
      run: cargo build --release -p rue
    
    - name: Test rue binary
      run: |
        ./target/release/rue samples/simple.rue || echo "Compilation test complete"
        echo "Integration tests will be added as features are implemented"

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit

  # Check for outdated dependencies
  deps:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-outdated
      run: cargo install cargo-outdated
    
    - name: Check for outdated dependencies
      run: cargo outdated --exit-code 1
      continue-on-error: true  # Don't fail the build, just warn